2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Schema "ORDERS" not found; SQL statement:
drop table if exists orders.orderItem [90079-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.getSchema(Parser.java:679)
	at org.h2.command.Parser.getSchema(Parser.java:685)
	at org.h2.command.Parser.parseDrop(Parser.java:1370)
	at org.h2.command.Parser.parsePrepared(Parser.java:376)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:473)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:176)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runSchemaScripts(DataSourceInitializer.java:85)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.init(DataSourceInitializer.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:340)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:62)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1050)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at com.bp.samples.CamelDemoApplication.main(CamelDemoApplication.java:11)
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Schema "ORDERS" not found; SQL statement:
drop table if exists orders.orders [90079-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.getSchema(Parser.java:679)
	at org.h2.command.Parser.getSchema(Parser.java:685)
	at org.h2.command.Parser.parseDrop(Parser.java:1370)
	at org.h2.command.Parser.parsePrepared(Parser.java:376)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:473)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:176)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runSchemaScripts(DataSourceInitializer.java:85)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.init(DataSourceInitializer.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:340)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:62)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1050)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at com.bp.samples.CamelDemoApplication.main(CamelDemoApplication.java:11)
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Schema "ORDERS" not found; SQL statement:
drop table if exists orders.catalogitem [90079-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.getSchema(Parser.java:679)
	at org.h2.command.Parser.getSchema(Parser.java:685)
	at org.h2.command.Parser.parseDrop(Parser.java:1370)
	at org.h2.command.Parser.parsePrepared(Parser.java:376)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:473)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:176)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runSchemaScripts(DataSourceInitializer.java:85)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.init(DataSourceInitializer.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:340)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:62)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1050)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at com.bp.samples.CamelDemoApplication.main(CamelDemoApplication.java:11)
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Schema "ORDERS" not found; SQL statement:
drop table if exists orders.customer [90079-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.getSchema(Parser.java:679)
	at org.h2.command.Parser.getSchema(Parser.java:685)
	at org.h2.command.Parser.parseDrop(Parser.java:1370)
	at org.h2.command.Parser.parsePrepared(Parser.java:376)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:473)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:176)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runSchemaScripts(DataSourceInitializer.java:85)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.init(DataSourceInitializer.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:340)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:62)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1050)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at com.bp.samples.CamelDemoApplication.main(CamelDemoApplication.java:11)
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 14:49:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:01:29 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:46:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:47:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 17:48:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:02:53 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:02:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:03:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:06:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:08:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:09:34 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:14:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:15:17 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:17:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:18:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-05 18:19:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:16:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:17:04 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:18:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:22:49 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDERS.ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists orders.order [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDERS.ORDER[*] ( ID BIGSERIAL NOT NULL, CUSTOMER_ID BIGINT NOT NULL, ORDERNUMBER TEXT NOT NULL, TIMEORDERPLACED TIMESTAMP NOT NULL, LASTUPDATE TIMESTAMP NOT NULL, STATUS TEXT NOT NULL, PRIMARY KEY (ID) )  "; expected "identifier"; SQL statement:
create table orders.order ( id bigserial not null, customer_id bigint not null, orderNumber text not null, timeOrderPlaced timestamp not null, lastUpdate timestamp not null, status text not null, primary key (id) )  [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Table "ORDERS" not found; SQL statement:
alter table orders.orders add constraint orders_fk_1 foreign key (customer_id) references orders.customer (id) [42102-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Table "ORDERS" not found; SQL statement:
alter table orders.orderItem add constraint orderItem_fk_1 foreign key (order_id) references orders.orders (id) [42102-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@somewhere.com'), '1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'jane@somehow.com'), '1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'john@someway.com'), '1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDER[*] (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS) VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') "; expected "identifier"; SQL statement:
insert into orders.order (customer_id, orderNumber, timeorderplaced, lastupdate, status) values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1001'), (select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1002'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1003'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1005'), (select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1006'), (select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1007'), (select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:25:03 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE) VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'), (SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate) values ((select id from orders.order where orderNumber = '1004'), (select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:25:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDERS.ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists orders.order [42001-193]
2016-12-08 12:25:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDERS.ORDER[*] (
        ID BIGSERIAL NOT NULL,
        CUSTOMER_ID BIGINT NOT NULL,
        ORDERNUMBER TEXT NOT NULL,
        TIMEORDERPLACED TIMESTAMP NOT NULL,
        LASTUPDATE TIMESTAMP NOT NULL,
        STATUS TEXT NOT NULL,
        PRIMARY KEY (ID)
) "; expected "identifier"; SQL statement:
create table orders.order (
        id bigserial not null,
        customer_id bigint not null,
        orderNumber text not null,
        timeOrderPlaced timestamp not null,
        lastUpdate timestamp not null,
        status text not null,
        primary key (id)
) [42001-193]
2016-12-08 12:25:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Table "ORDERS" not found; SQL statement:
alter table orders.orders add constraint orders_fk_1 foreign key (customer_id) references orders.customer (id) [42102-193]
2016-12-08 12:25:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Table "ORDERS" not found; SQL statement:
alter table orders.orderItem add constraint orderItem_fk_1 foreign key (order_id) references orders.orders (id) [42102-193]
2016-12-08 12:25:23 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDERS.ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists orders.order [42001-193]
2016-12-08 12:25:23 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDERS.ORDER[*] (
        ID BIGSERIAL NOT NULL,
        CUSTOMER_ID BIGINT NOT NULL,
        ORDERNUMBER TEXT NOT NULL,
        TIMEORDERPLACED TIMESTAMP NOT NULL,
        LASTUPDATE TIMESTAMP NOT NULL,
        STATUS TEXT NOT NULL,
        PRIMARY KEY (ID)
) "; expected "identifier"; SQL statement:
create table orders.order (
        id bigserial not null,
        customer_id bigint not null,
        orderNumber text not null,
        timeOrderPlaced timestamp not null,
        lastUpdate timestamp not null,
        status text not null,
        primary key (id)
) [42001-193]
2016-12-08 12:25:23 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Table "ORDERS" not found; SQL statement:
alter table orders.orders add constraint orders_fk_1 foreign key (customer_id) references orders.customer (id) [42102-193]
2016-12-08 12:25:23 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Table "ORDERS" not found; SQL statement:
alter table orders.orderItem add constraint orderItem_fk_1 foreign key (order_id) references orders.orders (id) [42102-193]
2016-12-08 12:25:24 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDERS.ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists orders.order [42001-193]
2016-12-08 12:25:24 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDERS.ORDER[*] (
        ID BIGSERIAL NOT NULL,
        CUSTOMER_ID BIGINT NOT NULL,
        ORDERNUMBER TEXT NOT NULL,
        TIMEORDERPLACED TIMESTAMP NOT NULL,
        LASTUPDATE TIMESTAMP NOT NULL,
        STATUS TEXT NOT NULL,
        PRIMARY KEY (ID)
) "; expected "identifier"; SQL statement:
create table orders.order (
        id bigserial not null,
        customer_id bigint not null,
        orderNumber text not null,
        timeOrderPlaced timestamp not null,
        lastUpdate timestamp not null,
        status text not null,
        primary key (id)
) [42001-193]
2016-12-08 12:25:24 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Table "ORDERS" not found; SQL statement:
alter table orders.orders add constraint orders_fk_1 foreign key (customer_id) references orders.customer (id) [42102-193]
2016-12-08 12:25:24 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Table "ORDERS" not found; SQL statement:
alter table orders.orderItem add constraint orderItem_fk_1 foreign key (order_id) references orders.orders (id) [42102-193]
2016-12-08 12:28:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "              
INSERT INTO ORDERS.ORDERS (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS)
	VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'),
		'1001', CURRENT_TIMESTAMP - INTERVAL '1 day'[*], CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "., (, [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
-- Load orders
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
	values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'),
		'1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:28:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERS (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS)
	VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'),
		'1002', CURRENT_TIMESTAMP - INTERVAL '1 day'[*], CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "., (, [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
	values ((select id from orders.customer where email = 'john@somewhere.com'),
		'1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:28:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERS (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS)
	VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'),
		'1003', CURRENT_TIMESTAMP - INTERVAL '1 day'[*], CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "., (, [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
	values ((select id from orders.customer where email = 'jane@somehow.com'),
		'1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:28:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "                   
INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE)
	VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'),
		(SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
-- Load order items
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.order where orderNumber = '1001'),
		(select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:28:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE)
	VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1001'),
		(SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.order where orderNumber = '1001'),
		(select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:28:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE)
	VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1002'),
		(SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.order where orderNumber = '1002'),
		(select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:28:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE)
	VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1003'),
		(SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.order where orderNumber = '1003'),
		(select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:28:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE)
	VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'),
		(SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.order where orderNumber = '1004'),
		(select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:28:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE)
	VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'),
		(SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.order where orderNumber = '1004'),
		(select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:28:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE)
	VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'),
		(SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.order where orderNumber = '1004'),
		(select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:28:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE)
	VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1005'),
		(SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.order where orderNumber = '1005'),
		(select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:28:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE)
	VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1006'),
		(SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.order where orderNumber = '1006'),
		(select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:28:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE)
	VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1007'),
		(SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.order where orderNumber = '1007'),
		(select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:28:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERITEM (ORDER_ID, CATALOGITEM_ID, STATUS, PRICE, QUANTITY, LASTUPDATE)
	VALUES ((SELECT ID FROM ORDERS.ORDER[*] WHERE ORDERNUMBER = '1004'),
		(SELECT ID FROM ORDERS.CATALOGITEM WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) "; expected "identifier"; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.order where orderNumber = '1004'),
		(select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) [42001-193]
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "              
INSERT INTO ORDERS.ORDERS (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS)
	VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'),
		'1001', CURRENT_TIMESTAMP - INTERVAL '1 day'[*], CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "., (, [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
-- Load orders
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
	values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'),
		'1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERS (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS)
	VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'john@somewhere.com'),
		'1002', CURRENT_TIMESTAMP - INTERVAL '1 day'[*], CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "., (, [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
	values ((select id from orders.customer where email = 'john@somewhere.com'),
		'1002', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERS (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS)
	VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'jane@somehow.com'),
		'1003', CURRENT_TIMESTAMP - INTERVAL '1 day'[*], CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "., (, [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
	values ((select id from orders.customer where email = 'jane@somehow.com'),
		'1003', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
	values ((select id from orders.customer where email = 'john@someway.com'),
		'1004', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') -- ((SELECT
    ID
FROM ORDERS.CUSTOMER
    /* ORDERS.CUSTOMER.tableScan */
    /* scanCount: 10 */
WHERE EMAIL = 'john@someway.com'), '1004', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP(), 'N') [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
	values ((select id from orders.customer where email = 'ron@goodbye.com'),
		'1005', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') -- ((SELECT
    ID
FROM ORDERS.CUSTOMER
    /* ORDERS.CUSTOMER.tableScan */
    /* scanCount: 11 */
WHERE EMAIL = 'ron@goodbye.com'), '1005', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP(), 'N') [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
	values ((select id from orders.customer where email = 'larry@hello.com'),
		'1006', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') -- ((SELECT
    ID
FROM ORDERS.CUSTOMER
    /* ORDERS.CUSTOMER.tableScan */
    /* scanCount: 12 */
WHERE EMAIL = 'larry@hello.com'), '1006', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP(), 'N') [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
	values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'),
		'1007', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'N') -- ((SELECT
    ID
FROM ORDERS.CUSTOMER
    /* ORDERS.CUSTOMER.tableScan */
    /* scanCount: 7 */
WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1007', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP(), 'N') [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
-- Load order items
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.orders where orderNumber = '1001'),
		(select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) -- ((SELECT
    ID
FROM ORDERS.ORDERS
    /* ORDERS.ORDERS.tableScan */
    /* scanCount: 5 */
WHERE ORDERNUMBER = '1001'), (SELECT
    ID
FROM ORDERS.CATALOGITEM
    /* ORDERS.CATALOGITEM.tableScan */
    /* scanCount: 12 */
WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP()) [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.orders where orderNumber = '1001'),
		(select id from orders.catalogitem where itemnumber = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP) -- ((SELECT
    ID
FROM ORDERS.ORDERS
    /* ORDERS.ORDERS.tableScan */
    /* scanCount: 5 */
WHERE ORDERNUMBER = '1001'), (SELECT
    ID
FROM ORDERS.CATALOGITEM
    /* ORDERS.CATALOGITEM.tableScan */
    /* scanCount: 18 */
WHERE ITEMNUMBER = '44910432221'), 'N', 1.25, 10, CURRENT_TIMESTAMP()) [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.orders where orderNumber = '1002'),
		(select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) -- ((SELECT
    ID
FROM ORDERS.ORDERS
    /* ORDERS.ORDERS.tableScan */
    /* scanCount: 5 */
WHERE ORDERNUMBER = '1002'), (SELECT
    ID
FROM ORDERS.CATALOGITEM
    /* ORDERS.CATALOGITEM.tableScan */
    /* scanCount: 12 */
WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP()) [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.orders where orderNumber = '1003'),
		(select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP) -- ((SELECT
    ID
FROM ORDERS.ORDERS
    /* ORDERS.ORDERS.tableScan */
    /* scanCount: 5 */
WHERE ORDERNUMBER = '1003'), (SELECT
    ID
FROM ORDERS.CATALOGITEM
    /* ORDERS.CATALOGITEM.tableScan */
    /* scanCount: 12 */
WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 1, CURRENT_TIMESTAMP()) [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.orders where orderNumber = '1004'),
		(select id from orders.catalogitem where itemnumber = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP) -- ((SELECT
    ID
FROM ORDERS.ORDERS
    /* ORDERS.ORDERS.tableScan */
    /* scanCount: 5 */
WHERE ORDERNUMBER = '1004'), (SELECT
    ID
FROM ORDERS.CATALOGITEM
    /* ORDERS.CATALOGITEM.tableScan */
    /* scanCount: 13 */
WHERE ITEMNUMBER = '222-5452210433'), 'N', 40.00, 1, CURRENT_TIMESTAMP()) [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.orders where orderNumber = '1004'),
		(select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP) -- ((SELECT
    ID
FROM ORDERS.ORDERS
    /* ORDERS.ORDERS.tableScan */
    /* scanCount: 5 */
WHERE ORDERNUMBER = '1004'), (SELECT
    ID
FROM ORDERS.CATALOGITEM
    /* ORDERS.CATALOGITEM.tableScan */
    /* scanCount: 17 */
WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 15, CURRENT_TIMESTAMP()) [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.orders where orderNumber = '1004'),
		(select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) -- ((SELECT
    ID
FROM ORDERS.ORDERS
    /* ORDERS.ORDERS.tableScan */
    /* scanCount: 5 */
WHERE ORDERNUMBER = '1004'), (SELECT
    ID
FROM ORDERS.CATALOGITEM
    /* ORDERS.CATALOGITEM.tableScan */
    /* scanCount: 22 */
WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP()) [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.orders where orderNumber = '1005'),
		(select id from orders.catalogitem where itemnumber = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP) -- ((SELECT
    ID
FROM ORDERS.ORDERS
    /* ORDERS.ORDERS.tableScan */
    /* scanCount: 5 */
WHERE ORDERNUMBER = '1005'), (SELECT
    ID
FROM ORDERS.CATALOGITEM
    /* ORDERS.CATALOGITEM.tableScan */
    /* scanCount: 12 */
WHERE ITEMNUMBER = '078-1344200444'), 'N', 20.00, 3, CURRENT_TIMESTAMP()) [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.orders where orderNumber = '1006'),
		(select id from orders.catalogitem where itemnumber = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP) -- ((SELECT
    ID
FROM ORDERS.ORDERS
    /* ORDERS.ORDERS.tableScan */
    /* scanCount: 5 */
WHERE ORDERNUMBER = '1006'), (SELECT
    ID
FROM ORDERS.CATALOGITEM
    /* ORDERS.CATALOGITEM.tableScan */
    /* scanCount: 17 */
WHERE ITEMNUMBER = '329918349'), 'N', 2.50, 1, CURRENT_TIMESTAMP()) [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.orders where orderNumber = '1007'),
		(select id from orders.catalogitem where itemnumber = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP) -- ((SELECT
    ID
FROM ORDERS.ORDERS
    /* ORDERS.ORDERS.tableScan */
    /* scanCount: 5 */
WHERE ORDERNUMBER = '1007'), (SELECT
    ID
FROM ORDERS.CATALOGITEM
    /* ORDERS.CATALOGITEM.tableScan */
    /* scanCount: 20 */
WHERE ITEMNUMBER = '0128381'), 'N', 65.99, 2, CURRENT_TIMESTAMP()) [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:29:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orderitem (order_id, catalogitem_id, status, price, quantity, lastupdate)
	values ((select id from orders.orders where orderNumber = '1004'),
		(select id from orders.catalogitem where itemnumber = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP) -- ((SELECT
    ID
FROM ORDERS.ORDERS
    /* ORDERS.ORDERS.tableScan */
    /* scanCount: 5 */
WHERE ORDERNUMBER = '1004'), (SELECT
    ID
FROM ORDERS.CATALOGITEM
    /* ORDERS.CATALOGITEM.tableScan */
    /* scanCount: 22 */
WHERE ITEMNUMBER = '69191882'), 'N', 101.10, 1, CURRENT_TIMESTAMP()) [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:30:57 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO ORDERS.ORDERS (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS)
	VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'),
		'1001', CURRENT_TIMESTAMP - INTERVAL '1 day'[*], CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') "; expected "., (, [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
	values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'),
		'1001', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '1 day', 'N') [42001-193]
2016-12-08 12:32:29 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT CURRENT_TIMESTAMP - INTERVAL '1 day'[*] FROM ORDERS.ORDERS "; SQL statement:
select CURRENT_TIMESTAMP - INTERVAL '1 day' from orders.orders [42000-193]
2016-12-08 12:38:33 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
--select CURRENT_TIMESTAMP from orders.orders;
--SELECT DATEADD('DAY', -1, CURRENT_TIMESTAMP) FROM orders.orders;
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
	values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'),
		'1001', DATEADD('DAY', -1, CURRENT_TIMESTAMP), DATEADD('DAY', -1, CURRENT_TIMESTAMP), 'N') -- ((SELECT
    ID
FROM ORDERS.CUSTOMER
    /* ORDERS.CUSTOMER.tableScan */
    /* scanCount: 7 */
WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', DATEADD('DAY', -1, CURRENT_TIMESTAMP()), DATEADD('DAY', -1, CURRENT_TIMESTAMP()), 'N') [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:39:07 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "                                              
                                                                  
INSERT INTO ORDERS.ORDERS (CUSTOMER_ID, ORDERNUMBER, TIMEORDERPLACED, LASTUPDATE, STATUS)
	VALUES ((SELECT ID FROM ORDERS.CUSTOMER WHERE EMAIL = 'mike@michaelhoffmaninc.com'),
		'1001', DATEADD('DAY', -1, CURRENT_TIMESTAMP), DATEADD('DAY', -1, CURRENT_TIMESTAMP), 'N'))[*] "; SQL statement:
--select CURRENT_TIMESTAMP from orders.orders;
--SELECT DATEADD('DAY', -1, CURRENT_TIMESTAMP) FROM orders.orders;
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
	values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'),
		'1001', DATEADD('DAY', -1, CURRENT_TIMESTAMP), DATEADD('DAY', -1, CURRENT_TIMESTAMP), 'N')) [42000-193]
2016-12-08 12:39:39 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'),
		'1001', 
DATEADD('DAY', -1, CURRENT_TIMESTAMP), 
DATEADD('DAY', -1, CURRENT_TIMESTAMP), 
'N') -- ((SELECT
    ID
FROM ORDERS.CUSTOMER
    /* ORDERS.CUSTOMER.tableScan */
    /* scanCount: 7 */
WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', DATEADD('DAY', -1, CURRENT_TIMESTAMP()), DATEADD('DAY', -1, CURRENT_TIMESTAMP()), 'N') [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:40:08 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'),
		'1001', 
DATEADD('DAY', -1, CURRENT_TIMESTAMP), 
DATEADD('DAY', -1, CURRENT_TIMESTAMP), 
'N') -- ((SELECT
    ID
FROM ORDERS.CUSTOMER
    /* ORDERS.CUSTOMER.tableScan */
    /* scanCount: 7 */
WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', DATEADD('DAY', -1, CURRENT_TIMESTAMP()), DATEADD('DAY', -1, CURRENT_TIMESTAMP()), 'N') [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:41:24 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'),
		'1001', 
DATEADD('DAY', -1, CURRENT_TIMESTAMP), 
DATEADD('DAY', -1, CURRENT_TIMESTAMP), 
'N') -- ((SELECT
    ID
FROM ORDERS.CUSTOMER
    /* ORDERS.CUSTOMER.tableScan */
    /* scanCount: 7 */
WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', DATEADD('DAY', -1, CURRENT_TIMESTAMP()), DATEADD('DAY', -1, CURRENT_TIMESTAMP()), 'N') [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:43:06 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'),
		'1001', 
DATEADD('DAY', -1, CURRENT_TIMESTAMP), 
DATEADD('DAY', -1, CURRENT_TIMESTAMP), 
'N') -- ((SELECT
    ID
FROM ORDERS.CUSTOMER
    /* ORDERS.CUSTOMER.tableScan */
    /* scanCount: 7 */
WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', DATEADD('DAY', -1, CURRENT_TIMESTAMP()), DATEADD('DAY', -1, CURRENT_TIMESTAMP()), 'N') [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:43:19 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Scalar subquery contains more than one row; SQL statement:
insert into orders.orders (customer_id, orderNumber, timeorderplaced, lastupdate, status)
values ((select id from orders.customer where email = 'mike@michaelhoffmaninc.com'),
		'1001', 
DATEADD('DAY', -1, CURRENT_TIMESTAMP), 
DATEADD('DAY', -1, CURRENT_TIMESTAMP), 
'N') -- ((SELECT
    ID
FROM ORDERS.CUSTOMER
    /* ORDERS.CUSTOMER.tableScan */
    /* scanCount: 7 */
WHERE EMAIL = 'mike@michaelhoffmaninc.com'), '1001', DATEADD('DAY', -1, CURRENT_TIMESTAMP()), DATEADD('DAY', -1, CURRENT_TIMESTAMP()), 'N') [90053-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.expression.Subquery.getValue(Subquery.java:39)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1380)
	at org.h2.server.web.WebApp.query(WebApp.java:1053)
	at org.h2.server.web.WebApp.query(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:222)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:125)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:162)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2016-12-08 12:48:44 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:46)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:176)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runSchemaScripts(DataSourceInitializer.java:85)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.init(DataSourceInitializer.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:340)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:62)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1050)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at com.bp.samples.CamelDemoApplication.main(CamelDemoApplication.java:9)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 96 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 91 more
2016-12-08 12:48:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-08 12:49:40 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT * FROM ORDERS.ORDER[*]"; expected "identifier"; SQL statement:
SELECT * FROM ORDERS.ORDER [42001-193]
2016-12-08 13:23:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-08 13:58:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-08 13:58:51 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-08 14:01:45 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-08 14:03:11 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-09 10:49:27 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-09 10:51:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-09 11:27:50 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-09 11:30:08 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-09 11:31:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-09 11:32:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-09 14:22:43 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-11 06:05:10 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-11 15:45:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-11 15:56:05 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:285)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.prepareStatement(Unknown Source)
	at org.springframework.jdbc.core.JdbcTemplate$SimplePreparedStatementCreator.createPreparedStatement(JdbcTemplate.java:1521)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:627)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:662)
	at org.apache.camel.component.sql.SqlConsumer.poll(SqlConsumer.java:168)
	at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:175)
	at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:102)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2016-12-11 15:56:05 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getMetaData(JdbcConnection.java:334)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy74.getMetaData(Unknown Source)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:294)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:329)
	at org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(SQLErrorCodesFactory.java:214)
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.setDataSource(SQLErrorCodeSQLExceptionTranslator.java:134)
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.<init>(SQLErrorCodeSQLExceptionTranslator.java:97)
	at org.springframework.jdbc.support.JdbcAccessor.getExceptionTranslator(JdbcAccessor.java:99)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:649)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:662)
	at org.apache.camel.component.sql.SqlConsumer.poll(SqlConsumer.java:168)
	at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:175)
	at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:102)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2016-12-11 15:56:06 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy77.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-11 16:04:15 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:46)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:176)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runSchemaScripts(DataSourceInitializer.java:85)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.init(DataSourceInitializer.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:340)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:62)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1050)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at com.bp.samples.Application.main(Application.java:9)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 96 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 91 more
2016-12-11 16:04:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy76.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-11 16:06:07 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy76.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-11 16:06:46 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy76.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-11 21:43:59 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:46)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:176)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runSchemaScripts(DataSourceInitializer.java:85)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.init(DataSourceInitializer.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:340)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:62)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1050)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at com.bp.samples.Application.main(Application.java:9)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 96 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 91 more
2016-12-11 21:44:01 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy76.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-11 21:44:55 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy76.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-11 21:56:23 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:46)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:176)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runSchemaScripts(DataSourceInitializer.java:85)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.init(DataSourceInitializer.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:340)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:62)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1050)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at com.bp.samples.Application.main(Application.java:9)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 96 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 91 more
2016-12-11 21:56:24 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy76.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-11 22:16:10 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy76.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-11 22:42:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy76.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-12 10:47:37 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Table "ORDERS" not found; SQL statement:
SELECT * FROM orders [42102-193]
2016-12-12 12:07:35 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-12 12:08:32 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-12 12:11:11 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-12 21:57:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy76.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-12 21:59:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy76.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-12 22:12:16 jdbc[11]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy76.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-12 22:35:18 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy76.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-13 09:34:26 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy76.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-13 11:20:05 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:457)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy76.getAutoCommit(Unknown Source)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:34)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-14 07:45:53 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-14 10:24:39 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-14 11:33:54 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-14 13:12:47 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-16 16:49:21 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-16 16:53:34 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:46)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:176)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runSchemaScripts(DataSourceInitializer.java:85)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.init(DataSourceInitializer.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:340)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:62)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1050)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at com.bp.samples.Application.main(Application.java:9)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 96 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 91 more
2016-12-16 16:53:55 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:46)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:176)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runSchemaScripts(DataSourceInitializer.java:85)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.init(DataSourceInitializer.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:340)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:62)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1050)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at com.bp.samples.Application.main(Application.java:9)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 96 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 91 more
2016-12-16 16:54:41 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-16 16:59:42 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:46)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:176)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runSchemaScripts(DataSourceInitializer.java:85)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.init(DataSourceInitializer.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:340)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:62)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1050)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at com.bp.samples.Application.main(Application.java:9)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 96 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/Users/behzad.pirvali/MyGit/camel-demo/db/h2/order-fulfillment.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 91 more
2016-12-16 17:02:49 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2016-12-16 17:26:16 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1483)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1458)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:202)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:502)
	at org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:443)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:784)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:635)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:187)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:132)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(SuppliedConnectionProviderConnectionHelper.java:33)
	at org.hibernate.tool.hbm2ddl.DatabaseExporter.<init>(DatabaseExporter.java:35)
	at org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:425)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:375)
	at org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:371)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1081)
	at org.hibernate.jpa.internal.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:462)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:633)
	at com.sun.proxy.$Proxy79.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:553)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
